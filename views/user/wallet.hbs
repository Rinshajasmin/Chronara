{{!-- {{>profilesidebar}}
{{>userHeadernw}} --}}

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- DataTables CSS & JS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

  <title>Wallet</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .wallet-balance {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: #f9f9f9;
      padding: 20px;
      border: 1px solid #ddd;
    }
    .wallet-portion{
        margin-left: 67px;
        margin-top: 18px;
    }
    .wallet-balance h1 {
      margin: 0;
      font-size: 24px;
    }
    .wallet-balance button {
      background-color: #007bff;
      color: white;
      padding: 10px 20px;
      border: none;
      cursor: pointer;
    }
    .transaction-table {
      width: 100%;
      border-collapse: collapse;
      margin: 20px 0;
    }
    table thead{
        background-color: #f0f0f0 !important;
    }

   
    .transaction-table th,
    .transaction-table td {
      border: 1px solid #ddd;
      padding: 10px;
      text-align: left;
    }
    .pagination {
      display: flex;
      justify-content: center;
      margin: 20px 0;
    }
    .pagination button {
      border: 1px solid #ddd;
      background-color: white;
      padding: 10px 15px;
      cursor: pointer;
    }
    .pagination .active {
      background-color: #007bff;
      color: white;
    }
     #addMoneyContainer {
        display: none;
        align-items: center;
        gap: 15px;
        margin-top: 20px;
    }

    #addMoneyInput {
        padding: 10px;
        width: 150px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    #addMoneyInput:focus {
        border-color: #007bff;
        outline: none;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    #addMoneySubmit {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    #addMoneySubmit:hover {
        background-color: #218838;
    }

    #addMoneyToggle {
        background-color: #007bff;
        color: white;
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    #addMoneyToggle:hover {
        background-color: #0056b3;
    }
     .wallet-container {
            margin: 50px auto;
            max-width: 1100px;
            background-color: white;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

    .wallet-balance {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
        background-color: #f9f9f9;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .wallet-balance h1 {
        margin: 0;
        font-size: 24px;
        color: #333;
    }

    .wallet-icon {
        font-size: 48px;
        color: #151718;
    }

    .wallet-balance button:hover {
        background-color: #0056b3; /* Darker blue on hover */
    }
    /* Target text inside the tbody */
tbody td {
    color: #101010 !important; /* Change to your desired color */
}
/* Override the Bootstrap border-light class */
.border-light {
    border-color: rgb(113, 111, 111) !important; /* Change to your desired color */

}
</style>
</head>
<body>
    {{>userHeadernw}}
    <div class="sidebar-container" style="display: flex;">
        {{>sidebar}}
    <div class="wallet-portion">
<div class="wallet-balance">
    <i class="fas fa-wallet wallet-icon"></i>
    <h1>Wallet Balance: ₹{{wallet.balance}}</h1>
    <button id="addMoneyToggle">Add Money</button>
    
    <div id="addMoneyContainer">
        <input type="number" id="addMoneyInput" placeholder="Enter amount" min="1">
        <button id="addMoneySubmit">Add Money</button>
    </div>
</div>

<div class="wallet-container">
  <div class="table-responsive">
    <table id="transactionTable" class="text-center ">
        <thead>
            <tr>
                <th class="text-center">Transaction ID</th>
                <th class="text-center">Description</th>
                <th class="text-center">Date</th>
                <th class="text-center">Withdrawal</th>
                <th class="text-center">Deposit</th>
            </tr>
        </thead>
        <tbody>
            {{#each wallet.transactions}}
                <tr>
                    <td class="text-center">{{id}}</td>
                    <td class="text-center">{{description}}</td>
                    <td class="text-center">{{date}}</td>
                    <td class="text-center">{{#if withdrawal}}₹{{withdrawal}}{{else}}-{{/if}}</td>
                    <td class="text-center">{{#if deposit}}₹{{deposit}}{{else}}-{{/if}}</td>
                </tr>
            {{/each}}
        </tbody>
    </table>
</div>
</div>
</div>
</div>
{{>userfooter}}



<script>
$(document).ready(function() {
    var table = $('#transactionTable').DataTable({
        searching: false, 
        paging: true,
        lengthChange: false,
        pageLength: 5,
        ordering: false,
        order: [[2, 'desc']], // Sort by the Date column (index 2) in descending order
        columnDefs: [
            {
                targets: 2, // Date column index
                render: function(data, type, row) {
                    if (type === 'display' || type === 'filter') {
                        const date = new Date(data); // Parse ISO date string
                        return date.toLocaleString('en-US', {
                            
                            year: 'numeric',
                            month: 'short',
                            day: 'numeric',
                            hour: '2-digit',
                            minute: '2-digit',
                            second: '2-digit',
                            hour12: true,
                        });
                    }
                    return data; // Raw data for sorting
                },
                type: 'datetime',
            },
        ],
        pagingType: "simple",
        language: {
            paginate: {
                first: '<i class="fas fa-angle-double-left"></i>',
                previous: '<i class="fas fa-chevron-left"></i>',
                next: '<i class="fas fa-chevron-right"></i>',
                last: '<i class="fas fa-angle-double-right"></i>',
            },
        },
    });
});
</script>

<script>
    document.getElementById('addMoneyToggle').addEventListener('click', () => {
        const container = document.getElementById('addMoneyContainer');
        container.style.display = container.style.display === 'none' ? 'flex' : 'none';
    });

    document.getElementById('addMoneySubmit').addEventListener('click', async () => {
        const amount = parseFloat(document.getElementById('addMoneyInput').value);
        if (!amount || amount <= 0) {
            alert('Please enter a valid amount.');
            return;
        }

        try {
            const response = await fetch('/user/addMoney', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ amount }),
            });

            const result = await response.json();
            if (result.success) {
                alert('Money added successfully!');
                location.reload(); // Reload the page to update the wallet balance
            } else {
                alert(result.message || 'Failed to add money.');
            }
        } catch (error) {
            console.error('Error adding money:', error);
            alert('Server error. Please try again later.');
        }
    });
</script>




</body>
</html>
