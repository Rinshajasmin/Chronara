{{> adminheader}}

<div class="form-container">
    <h2>Edit Coupon</h2>
    <form id="editCouponForm" method='POST' action="/admin/editCoupon/{{coupon._id}}">
        <label for="name">Coupon Code</label>
        <input type="text" id="name" name="name" value="{{coupon.name}}" required />
        {{#if message}}
        <span style="color: red;">{{message}}</span>
        {{/if}}

        <label for="offerPrice">Offer Price</label>
        <input type="number" id="offerPrice" name="offerPrice" value="{{coupon.offerPrice}}" required />

        <label for="minimumPrice">Minimum Price</label>
        <input type="number" id="minimumPrice" name="minimumPrice" value="{{coupon.minimumPrice}}" required />

        <label for="start">Start Date</label>
        <input type="date" id="start" name="start" value="{{formatDate coupon.createdOn "YYYY-MM-DD"}}" required />
          {{#if message1}}
        <span style="color: red;">{{message1}}</span>
        {{/if}}


       {{#if message2}}
        <span style="color: red;">{{message2}}</span>
       {{/if}}
        <label for="end">End Date</label>
        <input type="date" id="end" name="end" value="{{formatDate coupon.expireOn "YYYY-MM-DD"}}" required />
       

        <button class="btn btn-primary " type="submit">Update</button>
    </form>
</div>
 <script>
  document.getElementById("editCouponForm").addEventListener("submit", function (event) {
    const coupon = document.getElementById("name").value.trim();
    const offerPrice = parseFloat(document.getElementById("offerPrice").value);
    const minimumPrice = parseFloat(document.getElementById("minimumPrice").value);
    const startDate = new Date(document.getElementById("start").value);
    const endDate = new Date(document.getElementById("end").value);

     const currentDate = new Date();
    currentDate.setHours(0, 0, 0, 0); 

   const couponRegex = /^[A-Z0-9]+$/

    if(!couponRegex.test(coupon)){
    Swal.fire({
        icon: "error",
        title: "Invalid Coupon Code",
        text: "Coupon code must contain only uppercase letters and numbers!",
      });          
      event.preventDefault()
     return;
    }


    // Check if offer price is less than the minimum price
    if (offerPrice >= minimumPrice) {
     Swal.fire({
        icon: "error",
        title: "Invalid Offer Price",
        text: "Offer price must be less than the minimum price!",
      });           event.preventDefault(); // Prevent form submission
      return;
    }
     if (startDate < currentDate) {
     Swal.fire({
        icon: "error",
        title: "Invalid Start Date",
        text: "Start date must be today or a future date!",
      });           event.preventDefault(); // Prevent form submission
      return;
    }

    // Check if end date is after the start date
    if (endDate < startDate) {
  // End date is before the start date (invalid)
    Swal.fire({
        icon: "error",
        title: "Invalid End Date",
        text: "End date must be after the start date!",
      });      event.preventDefault(); // Prevent form submission
  return;
} else if (endDate.getTime() === startDate.getTime()) {
  // Start date and end date are the same (valid one-day coupon)
  console.log("One-day coupon is valid.");
  // Allow form submission
} else {
  // Valid date range (regular coupon)
  console.log("Valid date range.");
  // Allow form submission
}

    // Additional custom validation logic can go here
  });
</script>
<style>
    .form-container{
        width: 356px;
    margin-left: 381px;
    margin-top: 63px;
    }
</style>

{{!-- {{> adminfooter}} --}}
 