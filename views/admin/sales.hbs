<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <link rel="stylesheet" href="styles.css">
</head>
{{>adminheader}}
<body>
    <div class="sales-report-container">
        <div class="summary-cards">
            <div class="card">
                <h3>Total Sales</h3>
                <p>₹{{formatPrice report.totalSales}}</p>
            </div>
            <div class="card">
                <h3>Orders Count</h3>
                <p>{{report.totalOrders}}</p>
            </div>
            <div class="card">
                <h3>Total Discounts</h3>
                <p>₹{{formatPrice report.totalDiscounts}}</p>
            </div>
        </div>

        <div class="report-section">
        

<form id="salesReportForm"action="/admin/getSalesReport" method="POST">
    <div class="filters">
        <div class="filter-row">
            <label for="quick-filters">Quick Filters</label>
            <select name="filterType" id="quick-filters" onchange="toggleDateInputs()">
                <option value="daily" {{#if (eq filterType 'daily')}}selected{{/if}}>Daily</option>
                <option value="weekly" {{#if (eq filterType 'weekly')}}selected{{/if}}>Weekly</option>
                <option value="monthly" {{#if (eq filterType 'monthly')}}selected{{/if}}>Monthly</option>
                <option value="custom" {{#if (eq filterType 'custom')}}selected{{/if}}>Custom Date Range</option>
            </select>

            <div class="date-inputs" id="date-inputs" style="display: none;">
                <label for="start-date">Start Date</label>
                <input type="date" name="startDate" id="start-date" class="date-field" value="{{startDate}}">
                            
              <label for="end-date">End Date</label>
                <input type="date" name="endDate" id="end-date"class="date-field"  value="{{endDate}}">
               
            </div>

            <div class="action-buttons">
                <button type="submit" name="action" class="generate-report" value="view">Generate Report</button>
                <button class="download-pdf" id="download-pdf">Download PDF</button>
                <button class="download-excel" id="download-excel">Download Excel</button>
            </div>
        </div>
    </div>
</form>

 <table class="sales-table" id="salesTable">
    <thead>
        <tr>
            <th>Date</th>
            <th>Order ID</th>
            <th>Total Amount</th>
            <th>Discount</th>
            <th>Net Sales</th>
        </tr>
    </thead>
    <tbody>
        {{#each orders}}
        <tr>
            <td>{{formatDate this.createdOn "YYYY-MM-DD hh:mm A"}}</td>
            <td>{{this.orderId}}</td>
            <td>₹{{this.originalTotalPrice}}</td>
            <td>₹{{this.discounts}}</td>
            <td>₹{{this.netSales}}</td>
        </tr>
        {{else}}
        <tr>
            <td colspan="5">No orders found</td>
        </tr>
        {{/each}}
    </tbody>
</table>

        </div>
    </div>
</body>
<style>
    body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f9f9f9;
    color: #333;
}

.sales-report-container {
    max-width: 1200px;
    margin: 20px auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.summary-cards {
    display: flex;
    justify-content: space-between;
    gap: 20px;
    margin-bottom: 20px;
}

.card {
    flex: 1;
    background-color: #f5f5f5;
    border: 1px solid #ddd;
    border-radius: 10px;
    padding: 20px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.card h3 {
    font-size: 1.2em;
    margin-bottom: 10px;
    color: #555;
}

.card p {
    font-size: 1.5em;
    font-weight: bold;
    color: #333;
}

.report-section {
    margin-top: 20px;
}

.report-section h2 {
    font-size: 1.5em;
    margin-bottom: 20px;
    color: #333;
}


    .filters {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .filter-row {
        display: flex;
        align-items: flex-start; /* Align at the top of the row */
        gap: 1rem; /* Space between groups */
    }

    .filter-group {
        display: flex;
        flex-direction: column; /* Label above the input/select field */
        gap: 0.3rem; /* Space between label and input */
    }

    .date-inputs {
        display: flex;
        gap: 1rem; /* Space between the start and end date fields */
    }

    .action-buttons {
        display: flex;
        align-items: center; /* Align buttons vertically */
        gap: 0.5rem; /* Space between buttons */
    }

    select, input[type="date"] {
        padding: 0.5rem ;
        font-size: 1rem;
        width: 268px;

         /* Full width for better alignment */
    }

    label {
        font-weight: bold;
    }

button {
    padding: 4px 2px;
    font-size: 0.9em;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

button.generate-report {
    background-color: #007bff;
    color: #fff;
}

button.download-pdf {
    background-color: #28a745;
    color: #fff;
}

button.download-excel {
    background-color: #ffc107;
    color: #fff;
}

button:hover {
    opacity: 0.9;
}

.sales-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

.sales-table th,
.sales-table td {
    padding: 10px 15px;
    border: 1px solid #ddd;
    text-align: left;
    font-size: 0.9em;
}

.sales-table th {
    background-color: #f5f5f5;
    color: #555;
}

.sales-table tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

</style>

<script>
    
$(document).ready(function () {
    $('#salesTable').DataTable({
        paging: true,
        pageLength: 8,
        lengthChange: false, // Remove the dropdown for entries per page
        searching: false,
        ordering: false,
        info: false,
        pagingType: "simple",
        language: {
            paginate: {
                first: '<i class="fas fa-angle-double-left"></i>',
                previous: '<i class="fas fa-chevron-left"></i>',
                next: '<i class="fas fa-chevron-right"></i>',
                last: '<i class="fas fa-angle-double-right"></i>',
            },
        },
    });
});

</script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
    const filterDropdown = document.getElementById('quick-filters');
    const dateInputs = document.getElementById('date-inputs');

    // Function to toggle the visibility of date inputs
    function toggleDateInputs() {
        if (filterDropdown.value === 'custom') {
            dateInputs.style.display = 'block';
        } else {
            dateInputs.style.display = 'none';
        }
    }

    // Initialize the visibility based on the pre-selected filter
    toggleDateInputs();

    // Add event listener for dropdown change
    filterDropdown.addEventListener('change', toggleDateInputs);
});

</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById("salesReportForm").addEventListener("submit", function (e) {
        const startDate = new Date(document.getElementById("start-date").value);
        const endDate = new Date(document.getElementById("end-date").value);
        const today = new Date();

        if (startDate > endDate) {
            e.preventDefault(); // Prevent form submission
            Swal.fire({
                icon: "error",
                title: "Invalid Dates",
                text: "Start date should be less than the end date.",
            });
            return;
        }
        if (endDate > today) {
            e.preventDefault(); // Prevent form submission
            Swal.fire({
                icon: "error",
                title: "Invalid Dates",
                text: "End date should not be a future date.",
            });
            return;
        }
    });
</script>

<script>
    document.getElementById('download-pdf').addEventListener('click', () => {
    // Gather table data
    const tableData = [];
    document.querySelectorAll('.sales-table tbody tr').forEach(row => {
        const rowData = Array.from(row.cells).map(cell => cell.innerText.trim());
        tableData.push(rowData);
    });
      const startDate = document.getElementById('start-date').value; // Adjust as per your input element
    const endDate = document.getElementById('end-date').value ;   // Adjust as per your input element
    const filterType = document.getElementById('quick-filters').value
    
    

    // Send data to the backend
    fetch('/admin/downloadPDF', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ tableData ,startDate,endDate,filterType})
    })
    .then(response => response.blob())
    .then(blob => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'Sales_Report.pdf';
        a.click();
    })
    .catch(error => console.error('Error generating PDF:', error));
});

document.getElementById('download-excel').addEventListener('click', () => {
    // Gather table data
    const tableData = [];
    document.querySelectorAll('.sales-table tbody tr').forEach(row => {
        const rowData = Array.from(row.cells).map(cell => cell.innerText.trim());
        tableData.push(rowData);
    });

    const startDate=document.getElementById('start-date').value
    const endDate = document.getElementById('end-date').value
    const filterType = document.getElementById('quick-filters').value


    // Send data to the backend
    fetch('/admin/downloadExcel', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ tableData,startDate,endDate,filterType })
    })
    .then(response => response.blob())
    .then(blob => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'Sales_Report.xlsx';
        a.click();
    })
    .catch(error => console.error('Error generating Excel:', error));
});


    
</script>
</html>
